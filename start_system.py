# ============================================================================
# FICHIER 18: start_system.py - Script de d√©marrage SIMPLE
# ============================================================================

#!/usr/bin/env python3
"""
üöÄ Script de d√©marrage simplifi√© du syst√®me multi-agent
"""
  
import os
import sys
import asyncio

def check_requirements():
    """V√©rifier les pr√©requis"""
    print("üîç V√©rification des pr√©requis...")
    
    # V√©rifier Python
    if sys.version_info < (3, 8):
        print("‚ùå Python 3.8+ requis")
        return False
    
    # V√©rifier fichier de donn√©es
    if not os.path.exists('datafinal1.csv'):
        print("‚ùå Fichier 'datafinal1.csv' manquant")
        print("üìÅ Placez le fichier dans le r√©pertoire principal")
        return False
    
    # V√©rifier les imports
    try:
        import spade
        import pandas
        import sklearn
        import matplotlib
        import numpy
        print("‚úÖ Toutes les d√©pendances sont install√©es")
        return True
    except ImportError as e:
        print(f"‚ùå D√©pendance manquante: {e}")
        print("üì¶ Installez avec: pip install -r requirements.txt")
        return False

def setup_directories():
    """Cr√©er les dossiers n√©cessaires"""
    print("üìÅ Cr√©ation des dossiers...")
    
    directories = [
        'results',
        'results/models',
        'results/metrics', 
        'results/plots',
        'results/reports'
    ]
    
    for directory in directories:
        os.makedirs(directory, exist_ok=True)
    
    print("‚úÖ Dossiers cr√©√©s")

async def main():
    """Fonction principale"""
    print("üåæ SYST√àME MULTI-AGENT AGRICOLE")
    print("=" * 50)
    
    # V√©rifications
    if not check_requirements():
        return
    
    setup_directories()
    
    # Lancer le syst√®me principal
    try:
        print("\nüöÄ D√©marrage du syst√®me...")
        from main import main as run_system
        await run_system()
    except KeyboardInterrupt:
        print("\n‚ö†Ô∏è Arr√™t demand√© par l'utilisateur")
    except Exception as e:
        print(f"\n‚ùå Erreur: {e}")
        print("\nüß™ Essayez d'abord: python test_system.py")

if __name__ == "__main__":
    asyncio.run(main())